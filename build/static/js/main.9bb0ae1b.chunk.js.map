{"version":3,"sources":["containers/error.js","components/Nav/navbar.js","components/Nav/header.js","components/Admin/input.js","components/Admin/createEmployee.js","components/Login/userlogin.js","containers/main.js","App.js","serviceWorker.js","index.js"],"names":["Error","className","Navbar","Header","src","alt","Input","props","label","name","value","placeholder","type","onChange","handleChange","CreateEmployee","useState","firstName","lastName","email","password","gender","jobRole","department","address","isAdmin","input","setInput","isError","setIsError","message","setMessage","e","target","onSubmit","preventDefault","data","fetch","method","body","JSON","stringify","headers","authorization","localStorage","getItem","then","res","json","status","console","log","error","catch","role","UserLogin","mail","setMail","setPassword","setItem","token","history","push","required","Main","exact","path","component","App","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.9bb0ae1b.chunk.js","sourcesContent":["import React from 'react'\n\nconst Error = () => {\n  return (\n    <div className=\"error\">\n      <h4 className=\"text-light\">Error 404</h4>\n      <p className=\"text-light\">Oops this page does not exist</p>\n    </div>\n  )\n}\n\nexport default Error\n","import React from 'react'\n\nconst Navbar = () => {\n  return (\n    <nav>\n      <ul>\n        \n      </ul>\n    </nav>\n  )\n}\n\nexport default Navbar\n","import React from 'react'\nimport Navbar from './navbar'\n\nconst Header = () => {\n  return (\n    <header className=\"row\">\n        <div className=\"row logo\">\n          <img src={\"https://res.cloudinary.com/kayode/image/upload/v1572940640/icons/6_-_Team-512_biztib.png\"}  alt=\"Icon\" />\n          <h3 className=\"title\">TeamWork</h3>\n        </div>\n        \n      <Navbar />\n    </header>\n  )\n}\n\nexport default Header\n","import React from 'react'\n\nconst Input = (props) => {\n  return (\n    <div>\n\n    \n    <label>\n      {props.label}\n      <br />\n      <input\n      className=\"form-control epm-input\"\n      name={props.name}\n      value={props.value}\n      placeholder={props.placeholder}\n      type={props.type}\n      onChange={props.handleChange}\n    />\n    </label>\n    </div>\n  )\n}\n\nexport default Input\n","import React, { useState } from 'react';\nimport Input from './input';\n\nconst CreateEmployee = () => {\n  const [input, setInput] = useState({\n    firstName: '',\n    lastName: '',\n    email: '',\n    password: '',\n    gender: '',\n    jobRole: '',\n    department: '',\n    address: '',\n    isAdmin: ''\n  });\n  const [isError, setIsError] = useState(false);\n  const [message, setMessage] = useState('');\n  const handleChange = e => {\n    const { name, value } = e.target;\n    setInput({ ...input, [name]: value });\n  };\n  const handleSubmit = e => {\n    e.preventDefault();\n    const data = {\n      firstName: input.firstName,\n      lastName: input.lastName,\n      email: input.email,\n      password: input.password,\n      gender: input.gender,\n      jobRole: input.jobRole,\n      department: input.department,\n      address: input.address,\n      isAdmin: input.isAdmin\n    };\n    const url =\n      'https://idm-teamwork.herokuapp.com/api/v1/auth/create-user';\n    fetch(url, {\n      method: 'POST',\n      body: JSON.stringify(data),\n      headers: {\n        'Content-Type': 'application/json',\n        authorization: `Bearer ${localStorage.getItem('token')}`\n      }\n    })\n      .then(res => res.json())\n      .then(data => {\n        if (data.status === 'error') {\n          console.log(data.error);\n          setIsError(true);\n          setMessage(data.error);\n        }\n      })\n      .catch(error => {\n        console.log(error);\n      });\n  };\n  return (\n    <div className=\"create-emp-container\">\n      <form className=\"create-employee\" onSubmit={handleSubmit}>\n        <div className=\"form-input\">\n          <h3 className=\"emp-title\">Create Employee</h3>\n          <div className=\"row\">\n            <Input\n              className=\"form-control\"\n              label={'First Name'}\n              name={'firstName'}\n              type={'text'}\n              placeholder={'First Name'}\n              value={input.firstName}\n              handleChange={handleChange}\n            />\n            <Input\n              className=\"form-control\"\n              label={'Last Name'}\n              name={'lastName'}\n              type={'text'}\n              placeholder={'Last Name'}\n              value={input.lastName}\n              handleChange={handleChange}\n            />\n          </div>\n          <div className=\"row\">\n            <Input\n              className=\"form-control\"\n              label={'Email'}\n              name={'email'}\n              type={'email'}\n              placeholder={'Email'}\n              value={input.email}\n              handleChange={handleChange}\n            />\n            <Input\n              className=\"form-control\"\n              label={'Password'}\n              name={'password'}\n              type={'password'}\n              placeholder={'Password'}\n              value={input.password}\n              handleChange={handleChange}\n            />\n          </div>\n          <div className=\"row\">\n            <Input\n              className=\"form-control\"\n              label={'Address'}\n              name={'address'}\n              type={'text'}\n              placeholder={'Address'}\n              value={input.address}\n              handleChange={handleChange}\n            />\n            <div className=\"form-group gender\">\n              <span>Gender</span>\n              <br />\n              <label>\n                <input\n                  type=\"radio\"\n                  name=\"gender\"\n                  value=\"Male\"\n                  onChange={handleChange}\n                />\n                Male\n              </label>\n              <label>\n                <input\n                  type=\"radio\"\n                  name=\"gender\"\n                  value=\"Female\"\n                  onChange={handleChange}\n                />\n                Female\n              </label>\n              <label>\n                <input\n                  type=\"radio\"\n                  name=\"gender\"\n                  value=\"Others\"\n                  onChange={handleChange}\n                />\n                Others\n              </label>\n            </div>\n          </div>\n          <div className=\"row\">\n            <Input\n              className=\"form-control\"\n              label={'Department'}\n              name={'department'}\n              type={'text'}\n              placeholder={'Department'}\n              value={input.department}\n              handleChange={handleChange}\n            />\n            <Input\n              className=\"form-control\"\n              label={'Job Role'}\n              name={'jobRole'}\n              type={'text'}\n              placeholder={'Job Role'}\n              value={input.jobRole}\n              handleChange={handleChange}\n            />\n          </div>\n          <div>\n            <select\n              name=\"isAdmin\"\n              onChange={handleChange}\n              value={input.isAdmin}\n            >\n              <option value=\"true\">true</option>\n              <option value=\"false\">false</option>\n            </select>\n          </div>\n          <button className=\"submit\">Submit</button>\n          <br />\n          <div className=\"alert alert-danger\" role=\"alert\">\n            <p>{isError && message}</p>\n          </div>\n        </div>\n      </form>\n    </div>\n  );\n};\n\nexport default CreateEmployee;\n","import React, { useState } from 'react';\n\nconst UserLogin = props => {\n  const [mail, setMail] = useState('');\n  const [password, setPassword] = useState('');\n  const [isError, setIsError] = useState(false);\n  const [message, setMessage] = useState('');\n  const handleSubmit = e => {\n    e.preventDefault();\n    const url = 'https://idm-teamwork.herokuapp.com/api/v1/auth/signin';\n    const data = {\n      email: mail,\n      password: password\n    };\n    fetch(url, {\n      method: \"POST\",\n      body: JSON.stringify(data),\n      headers: { \"Content-Type\": \"application/json\" }\n    }).then(res => res.json()).then(data => {\n      if(data.status === 'error') {\n        console.log(data.error)\n          setIsError(true);\n        setMessage(data.error);\n      }\n      localStorage.setItem(\"token\", data.data.token);\n      if(data.data.isAdmin === true) {\n        props.history.push(\"/dashboard\");\n      } else {\n        props.history.push('/feed');\n      }\n      console.log(data);\n    }).catch(error => {\n      console.log(error);\n    });\n  }\n  return (\n    <div className=\"container admin\">\n      <div className=\"row form-container\">\n          <form className=\"login col-sm-6\" onSubmit={handleSubmit}>\n            <h3>Welcome Login</h3>\n            <input\n              required\n              type=\"email\"\n              className=\"form-control\"\n              placeholder=\"Email\"\n              value={mail}\n              onChange={e => setMail(e.target.value)}\n            />\n            <input\n              required\n              type=\"password\"\n                className=\"form-control\"\n              placeholder=\"Password\"\n              value={password}\n              onChange={e => setPassword(e.target.value)}\n            />\n            <button className=\"login-button\">LOGIN</button>\n            <p className=\"alert alert-danger\" role=\"alert\">{isError && message}</p>\n          </form>\n        <div className=\"welcome col-sm-6\">\n          <h2>Teamwork</h2>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default UserLogin;\n","import React from 'react';\nimport {Switch, Route} from 'react-router-dom';\nimport Error from './error';\nimport Header from '../components/Nav/header';\nimport CreateEmployee from '../components/Admin/createEmployee';\nimport UserLogin from '../components/Login/userlogin';\n\nconst Main = () => {\n\treturn (\n\t  <div>\n\t\t<Header />\n\t\t<Switch>\n\t\t\t<Route exact path={\"/\"} component={UserLogin} />\n\t\t  \t<Route exact path={\"/create-emp\"} component={CreateEmployee} />\n\t\t  \t<Route component={Error}/>\n\t\t</Switch>\n\t  </div>\n\t)\n  }\n  \n  export default Main;","import React from 'react';\nimport './App.css';\nimport Main from './containers/main';\n\nfunction App() {\n  return (\n    <div className=\"container app-container\">\n      <Main />\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport {HashRouter} from 'react-router-dom'\nimport './index.css';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\n\n\nReactDOM.render(<HashRouter><App /></HashRouter>, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}